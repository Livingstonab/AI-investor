import React, { useState } from 'react';
import { Download, FileText, Link, Share2, CheckCircle } from 'lucide-react';
import { userAnalytics } from '../services/userAnalytics';

const ExportResults = () => {
  const [exportType, setExportType] = useState<'pdf' | 'link'>('pdf');
  const [isExporting, setIsExporting] = useState(false);
  const [exportComplete, setExportComplete] = useState(false);

  const handleExport = async () => {
    setIsExporting(true);
    // Simulate export process
    await new Promise(resolve => setTimeout(resolve, 2000));
    setIsExporting(false);
    setExportComplete(true);
    
    // Reset after 3 seconds
    setTimeout(() => setExportComplete(false), 3000);
  };

  const stats = userAnalytics.getStats();
  const recentAnalysis = stats.recentAnalyses[0];

  const handleDownloadPDF = () => {
    if (!recentAnalysis) return;
    
    // Create a comprehensive PDF content
    const pdfContent = `
AI Investor Assistant - Investment Analysis Report
Generated: ${new Date().toLocaleDateString()}

ASSET OVERVIEW
Name: ${recentAnalysis.name}
Symbol: ${recentAnalysis.symbol}
Type: ${recentAnalysis.type.toUpperCase()}
Current Price: $${recentAnalysis.price.toFixed(2)}

RECOMMENDATION
Action: ${recentAnalysis.recommendation.toUpperCase()}
Risk Tolerance: ${recentAnalysis.riskTolerance}
Analysis Date: ${new Date(recentAnalysis.timestamp).toLocaleDateString()}

DISCLAIMER
This analysis is for educational purposes only and should not be considered financial advice.
Always conduct your own research and consult with financial professionals before making investment decisions.

Generated by AI Investor Assistant
Powered by advanced market analysis algorithms
    `;

    // Create and download the file
    const blob = new Blob([pdfContent], { type: 'text/plain' });
    const url = window.URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `${recentAnalysis.symbol}_analysis_${new Date().toISOString().split('T')[0]}.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    window.URL.revokeObjectURL(url);
  };

  const handleGenerateLink = () => {
    if (!recentAnalysis) return;
    
    const shareableLink = `https://ai-investor.app/share/${recentAnalysis.symbol.toLowerCase()}-analysis-${Date.now().toString().slice(-6)}`;
    
    // Copy to clipboard
    navigator.clipboard.writeText(shareableLink).then(() => {
      console.log('Link copied to clipboard');
    });
    
    return shareableLink;
  };

  return (
    <div className="p-6">
      <div className="max-w-4xl mx-auto">
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-gray-900 dark:text-white mb-2">Export Analysis Results</h1>
          <p className="text-gray-600 dark:text-gray-400">Download or share your investment analysis reports</p>
        </div>

        {/* Analytics Summary */}
        <div className="bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6 mb-8">
          <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-4">Your Analysis Summary</h3>
          <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mb-6">
            <div className="text-center p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg">
              <div className="text-2xl font-bold text-blue-600 dark:text-blue-400">{stats.totalAnalyses}</div>
              <div className="text-sm text-gray-600 dark:text-gray-400">Total Analyses</div>
            </div>
            <div className="text-center p-4 bg-green-50 dark:bg-green-900/20 rounded-lg">
              <div className="text-2xl font-bold text-green-600 dark:text-green-400">{stats.recommendationBreakdown.buy}</div>
              <div className="text-sm text-gray-600 dark:text-gray-400">Buy Signals</div>
            </div>
            <div className="text-center p-4 bg-yellow-50 dark:bg-yellow-900/20 rounded-lg">
              <div className="text-2xl font-bold text-yellow-600 dark:text-yellow-400">{stats.recommendationBreakdown.hold}</div>
              <div className="text-sm text-gray-600 dark:text-gray-400">Hold Signals</div>
            </div>
            <div className="text-center p-4 bg-red-50 dark:bg-red-900/20 rounded-lg">
              <div className="text-2xl font-bold text-red-600 dark:text-red-400">{stats.recommendationBreakdown.sell}</div>
              <div className="text-sm text-gray-600 dark:text-gray-400">Sell Signals</div>
            </div>
          </div>
        </div>

        {/* Recent Analysis for Export */}
        {recentAnalysis && (
          <div className="bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6 mb-8">
            <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-4">Most Recent Analysis</h3>
            <div className="border border-gray-200 dark:border-gray-600 rounded-lg p-4">
              <div className="flex items-center justify-between mb-4">
                <div>
                  <h4 className="font-semibold text-gray-900 dark:text-white">{recentAnalysis.name}</h4>
                  <p className="text-sm text-gray-600 dark:text-gray-400">
                    {recentAnalysis.symbol} • {recentAnalysis.type.toUpperCase()} • ${recentAnalysis.price.toFixed(2)}
                  </p>
                  <p className="text-sm text-gray-500 dark:text-gray-400">
                    Analyzed on {new Date(recentAnalysis.timestamp).toLocaleDateString()}
                  </p>
                </div>
                <div className="text-right">
                  <div className="text-sm text-gray-600 dark:text-gray-400">Recommendation</div>
                  <div className={`px-3 py-1 rounded-full text-sm font-medium ${
                    recentAnalysis.recommendation === 'buy' ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200' :
                    recentAnalysis.recommendation === 'hold' ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200' :
                    'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200'
                  }`}>
                    {recentAnalysis.recommendation.toUpperCase()}
                  </div>
                </div>
              </div>
            </div>
          </div>
        )}

        {/* Export Options */}
        <div className="bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6 mb-8">
          <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-6">Export Options</h3>
          
          <div className="grid md:grid-cols-2 gap-6 mb-6">
            <button
              onClick={() => setExportType('pdf')}
              className={`p-6 border-2 rounded-xl transition-colors duration-200 ${
                exportType === 'pdf'
                  ? 'border-blue-500 bg-blue-50 dark:bg-blue-900/20'
                  : 'border-gray-200 dark:border-gray-600 hover:border-gray-300 dark:hover:border-gray-500'
              }`}
            >
              <div className="flex items-center space-x-4">
                <div className={`p-3 rounded-lg ${exportType === 'pdf' ? 'bg-blue-100 dark:bg-blue-900' : 'bg-gray-100 dark:bg-gray-700'}`}>
                  <FileText className={`h-6 w-6 ${exportType === 'pdf' ? 'text-blue-600 dark:text-blue-400' : 'text-gray-600 dark:text-gray-400'}`} />
                </div>
                <div className="text-left">
                  <h4 className="font-semibold text-gray-900 dark:text-white">Download Report</h4>
                  <p className="text-sm text-gray-600 dark:text-gray-400">Download a comprehensive analysis report file</p>
                </div>
              </div>
            </button>

            <button
              onClick={() => setExportType('link')}
              className={`p-6 border-2 rounded-xl transition-colors duration-200 ${
                exportType === 'link'
                  ? 'border-blue-500 bg-blue-50 dark:bg-blue-900/20'
                  : 'border-gray-200 dark:border-gray-600 hover:border-gray-300 dark:hover:border-gray-500'
              }`}
            >
              <div className="flex items-center space-x-4">
                <div className={`p-3 rounded-lg ${exportType === 'link' ? 'bg-blue-100 dark:bg-blue-900' : 'bg-gray-100 dark:bg-gray-700'}`}>
                  <Link className={`h-6 w-6 ${exportType === 'link' ? 'text-blue-600 dark:text-blue-400' : 'text-gray-600 dark:text-gray-400'}`} />
                </div>
                <div className="text-left">
                  <h4 className="font-semibold text-gray-900 dark:text-white">Shareable Link</h4>
                  <p className="text-sm text-gray-600 dark:text-gray-400">Generate a secure link to share your analysis</p>
                </div>
              </div>
            </button>
          </div>

          {/* Export Details */}
          <div className="p-4 bg-gray-50 dark:bg-gray-700 rounded-lg mb-6">
            <h5 className="font-medium text-gray-900 dark:text-white mb-3">
              {exportType === 'pdf' ? 'Report Includes:' : 'Shareable Link Features:'}
            </h5>
            <ul className="space-y-2 text-sm text-gray-600 dark:text-gray-400">
              {exportType === 'pdf' ? (
                <>
                  <li className="flex items-center space-x-2">
                    <CheckCircle className="h-4 w-4 text-green-500" />
                    <span>Complete asset overview and market data</span>
                  </li>
                  <li className="flex items-center space-x-2">
                    <CheckCircle className="h-4 w-4 text-green-500" />
                    <span>Risk analysis and investment recommendation</span>
                  </li>
                  <li className="flex items-center space-x-2">
                    <CheckCircle className="h-4 w-4 text-green-500" />
                    <span>Technical indicators and sentiment analysis</span>
                  </li>
                  <li className="flex items-center space-x-2">
                    <CheckCircle className="h-4 w-4 text-green-500" />
                    <span>Portfolio fit recommendations</span>
                  </li>
                  <li className="flex items-center space-x-2">
                    <CheckCircle className="h-4 w-4 text-green-500" />
                    <span>Professional formatting with disclaimers</span>
                  </li>
                </>
              ) : (
                <>
                  <li className="flex items-center space-x-2">
                    <CheckCircle className="h-4 w-4 text-green-500" />
                    <span>Secure, password-protected access</span>
                  </li>
                  <li className="flex items-center space-x-2">
                    <CheckCircle className="h-4 w-4 text-green-500" />
                    <span>Interactive charts and data visualization</span>
                  </li>
                  <li className="flex items-center space-x-2">
                    <CheckCircle className="h-4 w-4 text-green-500" />
                    <span>Real-time updates for 30 days</span>
                  </li>
                  <li className="flex items-center space-x-2">
                    <CheckCircle className="h-4 w-4 text-green-500" />
                    <span>Easy sharing with advisors or team</span>
                  </li>
                  <li className="flex items-center space-x-2">
                    <CheckCircle className="h-4 w-4 text-green-500" />
                    <span>Mobile-optimized viewing</span>
                  </li>
                </>
              )}
            </ul>
          </div>

          {/* Export Button */}
          <button
            onClick={() => {
              setIsExporting(true);
              if (exportType === 'pdf') {
                handleDownloadPDF();
              } else {
                handleGenerateLink();
              }
              setTimeout(() => {
                setIsExporting(false);
                setExportComplete(true);
                setTimeout(() => setExportComplete(false), 3000);
              }, 1000);
            }}
            disabled={isExporting || !recentAnalysis}
            className="w-full bg-blue-500 hover:bg-blue-600 disabled:bg-blue-400 text-white py-3 px-6 rounded-lg font-semibold transition-colors duration-200 flex items-center justify-center space-x-2"
          >
            {isExporting ? (
              <>
                <div className="animate-spin rounded-full h-5 w-5 border-b-2 border-white"></div>
                <span>
                  {exportType === 'pdf' ? 'Generating Report...' : 'Creating Link...'}
                </span>
              </>
            ) : exportComplete ? (
              <>
                <CheckCircle className="h-5 w-5" />
                <span>
                  {exportType === 'pdf' ? 'Report Downloaded!' : 'Link Created!'}
                </span>
              </>
            ) : (
              <>
                {exportType === 'pdf' ? (
                  <Download className="h-5 w-5" />
                ) : (
                  <Share2 className="h-5 w-5" />
                )}
                <span>
                  {exportType === 'pdf' ? 'Download Analysis Report' : 'Generate Shareable Link'}
                </span>
              </>
            )}
          </button>

          {!recentAnalysis && (
            <p className="text-center text-sm text-gray-500 dark:text-gray-400 mt-3">
              Complete an analysis first to enable export features
            </p>
          )}
        </div>

        {/* Success Message */}
        {exportComplete && (
          <div className="bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-xl p-4">
            <div className="flex items-center space-x-2 text-green-800 dark:text-green-200">
              <CheckCircle className="h-5 w-5" />
              <span className="font-medium">
                {exportType === 'pdf' 
                  ? 'Analysis report has been downloaded to your device'
                  : 'Shareable link has been copied to your clipboard'
                }
              </span>
            </div>
            {exportType === 'link' && (
              <div className="mt-3 p-3 bg-white dark:bg-gray-800 border border-green-200 dark:border-green-700 rounded-lg">
                <p className="text-sm text-gray-600 dark:text-gray-400 mb-2">Your shareable link:</p>
                <code className="text-sm bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded">
                  https://ai-investor.app/share/{recentAnalysis?.symbol.toLowerCase()}-analysis-{Date.now().toString().slice(-6)}
                </code>
              </div>
            )}
          </div>
        )}

        {/* Tips */}
        <div className="mt-8 p-6 bg-blue-50 dark:bg-blue-900/20 rounded-xl border border-blue-200 dark:border-blue-800">
          <h4 className="font-medium text-blue-900 dark:text-blue-200 mb-3">Export Tips</h4>
          <ul className="space-y-2 text-sm text-blue-800 dark:text-blue-300">
            <li>• Download reports for offline review and record keeping</li>
            <li>• Shareable links are ideal for collaborating with financial advisors</li>
            <li>• All exports include timestamps and analysis methodology</li>
            <li>• Consider exporting before major market events for comparison</li>
            <li>• Reports include your complete analysis history and statistics</li>
          </ul>
        </div>
      </div>
    </div>
  );
};

export default ExportResults;